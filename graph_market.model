//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 4.2.1;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space Internet(0,0),Square_2D(40, 40, Loop, North, 1, !Map_3D){
        AgtType user(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim transmission_range(0, 0) As Integer = (0);
            Dim IDNo(0, 0) As Integer = (0);
            Dim viewStep(0, 0)[18][18] As Integer = (324*0);
            Dim followee(0, 0) As AgtSet = ();
            Dim num_followee(0, 0) As Integer = (0);
            Dim follower(0, 0) As AgtSet = ();
        }
        AgtType follower(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim transmission_range(0, 0) As Integer = (0);
            Dim Info(0, 0) <2> [18] As Double = (18*0.0);
            Dim IDNo(0, 0) As Integer = (0);
            Dim W_g(0, 0)[8] As Integer = (8*0);
            Dim categoryThreshold(0, 0) As Double = (0.0);
            Dim effectiveness(0, 0) As Double = (0.0);
            Dim wGreed(0, 0)[18] As Integer = (18*0);
            Dim wCriticism(0, 0)[18] As Integer = (18*0);
            Dim viewStep(0, 0)[18][18] As Integer = (324*0);
            Dim infoThreshold(0, 0) As Double = (0.0);
            Dim viewNum(0, 0) As Integer = (0);
            Dim Utility(0, 0)[18] As Double = (18*0.0);
            Dim max_info_movie(0, 0) As Integer = (0);
            Dim followee(0, 0) As AgtSet = ();
        }
    }
    Space Social(0,0),Square_2D(40, 40, Loop, North, 1, !Map_3D){
        AgtType consumer(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim transmission_range(0, 0) As Integer = (0);
            Dim Info(0, 0) <2> [18] As Double = (18*0.0);
            Dim IDNo(0, 0) As Integer = (0);
            Dim W_g(0, 0)[8] As Integer = (8*0);
            Dim categoryThreshold(0, 0) As Double = (0.0);
            Dim effectiveness(0, 0) As Double = (0.0);
            Dim wGreed(0, 0)[18] As Integer = (18*0);
            Dim wCriticism(0, 0)[18] As Integer = (18*0);
            Dim viewStep(0, 0)[18][18] As Integer = (324*0);
            Dim infoThreshold(0, 0) As Double = (0.0);
            Dim viewNum(0, 0) As Integer = (0);
            Dim Utility(0, 0)[18] As Double = (18*0.0);
            Dim max_info_movie(0, 0) As Integer = (0);
        }
    }
    Dim user_ratio(0, 0) As Double = (0.0);
    Dim follower_ratio(0, 0) As Double = (0.0);
    Dim consumer_ratio(0, 0) As Double = (0.0);
    Dim num_agent(0, 0) As Integer = (0);
    Dim genreRatio(0, 0)[8] As Double = (8*0.0);
    AgtType movie(0, 0)[0] {
        Dim ID(0, 0) As Integer = (0);
        Dim review(0, 0) As Double = (0.0);
        Dim greed(0, 0) As Double = (0.0);
        Dim criticism(0, 0) As Double = (0.0);
        Dim alpha(0, 0) As Integer = (0);
        Dim startDate(0, 0) As Integer = (0);
        Dim genre(0, 0) As Integer = (0);
        Dim promotion(0, 0) As Double = (0.0);
        Dim promProb(0, 0) As Double = (0.0);
        Dim IDNo(0, 0) As Integer = (0);
        Dim numAudience(0, 0) As Integer = (0);
    }
    Dim test(0, 0)[18] As Integer = (18*0);
    Dim series(0, 0) As Integer = (0);
    Dim period(0, 0) As Integer = (0);
    Dim dir(0, 0) As String = ("");
    Dim num_edges(0, 0) As Integer = ();
    Dim num_new_in_edges(0, 0) As Integer = ();
    Dim num_new_out_edges(0, 0) As Integer = ();
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.USER_RATIO = 1(0.16);
    UNIVERSE.FOLLOWER_RATIO = 1(0.24);
    UNIVERSE.CONSUMER_RATIO = 1(0.6);
    UNIVERSE.NUM_AGENT = 1(100);
    UNIVERSE.GENRERATIO = 1(0.2, 0.27, 0.43, 0.45, 0.48, 0.6, 0.61, 0.69);
    UNIVERSE.SERIES = 1(1);
    UNIVERSE.PERIOD = 1(400);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
/* ver2.2.1
• ジャンル選好度 W_g について、「普通」の選好度 0.1 ~ 0.9 で与える
• 2回目以降の満足度/批評値の受信重みを2割ずつ減衰するようにした
• 各種操作を関数化
• インターネット上にグラフ構造を追加して、リンクを参照することで情報を得るモデル
• 現実世界での情報伝播はこれまでと同様
• まずは、ネットユーザーは全員繋がっている関係にあるとする
• 
*/

include "myfunc_graph.inc"

Univ_Init{
	Dim num_netuser As Integer, num_netfollower As Integer, num_consumer As Integer, num_agtset As Integer
	Dim netuser As Agtset, netfollower As Agtset, consumer As Agtset, movies As Agtset
	Dim one As Agt, follower As Agt
	Dim i As Integer, j As Integer, mode As Integer
	Dim min As Double, criteria As Double
	
	//ExitSimulationMsgLn("!! 連続実行用に書き換えるまでは安易に実行しない !!")
	
	// 各エージェントタイプの割合の合計が1じゃない場合はシミュレーションを中止
	If Universe.user_ratio + Universe.follower_ratio + Universe.consumer_ratio != 1 Then
		ExitSimulationMsgLn("Sum of ratio is not 1")
	End If
	
	// シミュレーション開始時間を記録する
	If GetCountSimulationNumber() == 1 Then
		PrintLn("") // 改行
		PrintLn("Start Time : " & TimeToStr(GetRealTime(), "HH時mm分ss秒"))
	End if
	
	// 出力先のディレクトリ名を宣言
	Universe.dir = "graph_market"
	
//	// 乱数シードの指定
//	SetRandomSeed(88)
	
	
	//映画を生成
	OpenFileCSV("data/Genre_Data.csv", 1, 1) // 映画のジャンル情報を持つファイル
	OpenFileCSV("data/review_Data.csv", 2, 1) // 映画の評価情報を持つファイル
	OpenFileCSV("data/Ad_Data.csv", 3, 1) // 映画の宣伝費情報を持つファイル
	OpenFileCSV("data/Date_Data.csv", 4, 1) // 映画の公開日情報を持つファイル
	min = CInt(ReadFileCSV(3)) // 宣伝費の最小値を取得する
	criteria = CInt(ReadFileCSV(3)) // 宣伝費を10段階評価するための基準値
	For i=0 to 17
		one = CreateAgt(Universe.movie) // 映画を生成
		one.genre = CInt(ReadFileCSV(1)) // ジャンルを取得
		one.review = CDbl(ReadFileCSV(2)) // 評価値を取得
		one.alpha = CInt(ReadFileCSV(3)) // 宣伝費を取得
		one.startDate = CInt(ReadFileCSV(4)) // 公開日を取得
		one.IDNo = i // 映画の番号を付与
		For j=1 to 9 // 宣伝ウェイトを計算
			If one.alpha < min+criteria*j Then
				one.alpha = j
				Break
			End if
		Next j
		If j == 10 Then
			one.alpha = 10
		End if
		one.promProb = 0.08 * one.alpha // 宣伝接触確率を計算(n_P=0.08)
		one.greed = (one.review^3) / (one.alpha^2) // 満足度を計算(m_G=3, n_G=2)
		If one.review >= 7.4 Then // 批評値を計算(v=7.4)
			one.criticism = one.review
		else
			one.criticism = -(10-one.review) * 3 // beta=3
		End if
	//	println(i & " : " & _.alpha) // デバッグ用
	Next i
	For i=1 to 4 // ファイルを閉じる
		CloseFileCSV(i)
	Next i
	
	
	MakeAgtset(movies, Universe.movie)
	// ネットユーザーエージェントを生成
	num_netuser = Round(Universe.num_agent * Universe.user_ratio)
	For i=0 to num_netuser-1
		MakeAgtset(netuser, Universe.Internet.user)  // エージェント追加前のネットユーザーの一覧を取得する
		one = CreateAgt(Universe.Internet.user)
		one.IDNo = i // エージェントに識別番号を付与する
		one.transmission_range = 10  // userの情報伝達範囲は周囲10近傍(21*21セルの正方形内)
		// 作品ごとの鑑賞情報を初期化する
		For Each movie in movies
			one.viewStep(0, movie.IDNo) = 0  // 鑑賞回数の初期化
			one.viewStep(1, movie.IDNo) = 0  // 観賞後の経過時間の初期化
		Next movie
		// ネットユーザー上のスケールフリーネットワークを構築する
		num_agtset = CountAgtSet(netuser)
//		one.num_followee = 0  // 初期化
		If num_agtset == 1 Then
			// 2人が繋がった小さなネットワークから構築を始める
			initializeNetwork(one, GetAgt(netuser, 0))
//			follower = GetAgt(netuser, 0)
//			AddAgt(one.followee, follower)
//			AddAgt(follower.followee, one)
//			one.num_followee = one.num_followee + 1
//			follower.num_followee = follower.num_followee + 1
//			Universe.num_edges = 2
		Elseif num_agtset > 1 Then
			// 3人目以降は、リンクの度数が高いほど繋がりやすくなる
//			updateNetwork(netuser, one)
		End if
	Next i
	RandomPutAgtSetCell(netuser, True)
	
	
	// 消費者を生成
	// ネットフォロワーエージェントを生成
	num_netfollower = Round(Universe.num_agent * Universe.follower_ratio)
	For i=0 to num_netfollower-1
		one = CreateAgt(Universe.Internet.follower)
		one.IDNo = i // エージェントに識別番号を付与する
		getParams(one, movies, 8)
	Next i
	MakeAgtset(netfollower, Universe.Internet.follower)
	RandomPutAgtSetCell(netfollower, True)
	
	// 一般消費者エージェントを生成
	num_consumer = Round(Universe.num_agent * Universe.consumer_ratio)
	For i=0 to num_consumer-1
		one = CreateAgt(Universe.Social.consumer)
		one.IDNo = i // エージェントに識別番号を付与する
		getParams(one, movies, 8)
	Next i
	MakeAgtsetSpace(consumer, Universe.Social)
	RandomPutAgtSetCell(consumer, True)
	
	
	// 出力用ファイルの準備
	If GetCountSimulationNumber()==1 Then
		// 1回目のシミュレーションの開始時に出力ファイルを初期化
		mode = 2 // write mode
		// シミュレーションの環境設定を書き込む
		writeEnvInfo()
	Else 
		// 2回目以降のシミュレーションでは出力を追加していく
		mode = 3 // append mode
	End if
	OpenFileCSV(Universe.dir&"/Audience_Data.csv", 1, mode) // 映画動員数確認用のファイル
	OpenFileCSV(Universe.dir&"/follower_Info.csv", 2, mode) // ネットフォロワーの映画情報量の確認用のファイル
	OpenFileCSV(Universe.dir&"/follower_View.csv", 3, mode) // ネットフォロワーの鑑賞状況の確認用のファイル
	OpenFileCSV(Universe.dir&"/follower_Utility.csv", 4, mode) // ネットフォロワーの映画効用値の確認用のファイル
	OpenFileCSV(Universe.dir&"/consumer_Info.csv", 5, mode) // 一般消費者の映画情報量の確認用のファイル
	OpenFileCSV(Universe.dir&"/consumer_View.csv", 6, mode) // 一般消費者の鑑賞状況の確認用のファイル
	OpenFileCSV(Universe.dir&"/consumer_Utility.csv", 7, mode) // 一般消費者の映画効用値の確認用のファイル
	WriteFileCSV(1, "Step", True)
	WriteFileCSV(2, "Step", True)
	WriteFileCSV(3, "Step", True)
	WriteFileCSV(4, "movieID", True)
	WriteFileCSV(5, "Step", True)
	WriteFileCSV(6, "Step", True)
	WriteFileCSV(7, "movieID", True)
	For i=1 to 7
		CloseFileCSV(i)
	Next i
}

Univ_Step_Begin{
	Dim agents As Agtset, agents2 As Agtset, movies As Agtset
	Dim one As Agt, movie As Agt
	Dim num_movie As Integer, flg As Integer
	
	MakeAgtSet(movies, Universe.movie)
	num_movie = CountAgtSet(movies)
	MakeAgtSet(agents, Universe.Internet.user)
	For Each one in agents
		For Each movie in movies
			// userの鑑賞済みの作品の経過日数を更新する
			If one.viewStep(0, movie.IDNo) >= 1 Then
				one.viewStep(1, movie.IDNo) = one.viewStep(1, movie.IDNo) + 1
			End if
		Next movie
	Next one
	MakeAgtSet(agents, Universe.Internet.follower)
	MakeAgtSetSpace(agents2, Universe.Social)
	JoinAgtSet(agents, agents2)
	For Each one in agents
		// 「未鑑賞で情報保有量が最大の作品」が鑑賞済みである状況を避ける
		flg = 0
		Do While one.viewStep(0, one.max_info_movie) >= 1
			one.max_info_movie = (one.max_info_movie + 1) Mod num_movie
			flg = flg + 1
			If flg == num_movie - 1 Then
				// 全ての作品を鑑賞している場合は無視して良い
				break
			End if
		Loop
		For Each movie in movies
			// 鑑賞済みの作品の経過日数を更新する
			If one.viewStep(0, movie.IDNo) >= 1 Then
				one.viewStep(1, movie.IDNo) = one.viewStep(1, movie.IDNo) + 1
			Else
				If one.Info(one.max_info_movie) < one.Info(movie.IDNo) Then
					// 作品が未鑑賞かつ情報保有量がより多い場合に、「未鑑賞で情報保有量が最大の作品」を更新する
					one.max_info_movie = movie.IDNo
				End if
			End if
		Next movie
	Next one
	
	// 動員数の初期化
	For Each movie in movies
		movie.numAudience = 0
	Next movie
}

Univ_Step_End{
	Dim movies As Agtset, followers As Agtset, consumers As Agtset
	Dim movie As Agt, follower As Agt, consumer As Agt
	Dim nowStep As Integer, i As integer
	
	nowStep = GetCountStep()
	// 100ステップ毎に現在のステップを確認
	//If nowStep mod 100 == 0 Then
	//	PrintLn("Step : " & nowStep)
	//End if
	
	// ネットフォロワーについて、サイズ( Step, NumMovie*NumAgent )の表を作成
	MakeAgtSet(movies, Universe.movie)
	MakeAgtSet(followers, Universe.Internet.follower)
	MakeAgtSet(consumers, Universe.Social.consumer)
	SortAgtSet(movies, "IDNo", True)
	SortAgtSet(followers, "IDNo", True)
	SortAgtSet(consumers, "IDNo", True)
	OpenFileCSV(Universe.dir&"/Audience_Data.csv", 1, 3) // 動員数を記録
	OpenFileCSV(Universe.dir&"/follower_Info.csv", 2, 3) // 各エージェントの保有情報量を記録
	OpenFileCSV(Universe.dir&"/follower_View.csv", 3, 3) // 1 エージェントの鑑賞状況を記録
	OpenFileCSV(Universe.dir&"/consumer_Info.csv", 4, 3)
	OpenFileCSV(Universe.dir&"/consumer_View.csv", 5, 3)
	For i=1 to 5
		WriteFileCSV(i, nowStep, False) // 1列目にステップ数を記録
	Next i
	For Each movie in movies
		WriteFileCSV(1, movie.numAudience, False)
		universe.test(movie.IDNo) = movie.numAudience // 作品毎の動員数を記録
		For Each follower in followers
			WriteFileCSV(2, follower.Info(movie.IDNo), False) // 作品毎に、全フォロワーエージェントの情報保有量を記録していく
			WriteFileCSV(3, follower.viewStep(0, movie.IDNo), False) // 作品毎に、全フォロワーエージェントの鑑賞回数(フラグ)を記録していく
		Next follower
		For Each consumer in consumers
			WriteFileCSV(4, consumer.Info(movie.IDNo), False)
			WriteFileCSV(5, consumer.viewStep(0, movie.IDNo), False)
		Next consumer
	Next movie
	For i=1 to 5
		WriteFileCSV(i, "", True) // 改行する
		CloseFileCSV(i)
	Next i
	
	// Universe.period (400日)(ステップ)で終了
	If nowStep == Universe.period Then
		ExitSimulation()
	//	ExitSimulationMsgLn(CStr(Universe.period) & " steps passed")
	End if
}

Univ_Finish{
	Dim followers As Agtset, consumers As Agtset, movies As Agtset
	Dim follower As Agt, consumer As Agt, movie As Agt
	Dim num_sim As Integer
	
	MakeAgtset(followers, Universe.Internet.follower)
	MakeAgtset(consumers, Universe.Social.consumer)
	MakeAgtset(movies, Universe.movie)
	SortAgtSet(followers, "IDNo", True)
	SortAgtSet(consumers, "IDNo", True)
	SortAgtSet(movies, "IDNo", True)
	OpenFileCSV(Universe.dir&"/follower_Utility.csv", 1, 3)
	OpenFileCSV(Universe.dir&"/consumer_Utility.csv", 2, 3)
	For Each movie in movies
		WriteFileCSV(1, movie.IDNo, False)
		WriteFileCSV(2, movie.IDNo, False)
		For Each follower in followers
			WriteFileCSV(1, follower.Utility(movie.IDNo), False)
		Next follower
		For Each consumer in consumers
			WriteFileCSV(2, consumer.Utility(movie.IDNo), False)
		Next consumer
		WriteFileCSV(1, "", True)
		WriteFileCSV(2, "", True)
	Next movie
	CloseFileCSV(1)
	CloseFileCSV(2)
	
	num_sim = GetCountSimulationNumber()
	PrintLn("Simulation Number : " & num_sim)
	If num_sim == Universe.series Then
		// シミュレーション終了時に、開始および終了時間を出力する
		PrintLn("End Time : " & TimeToStr(GetRealTime(), "HH時mm分ss秒"))
		PrintLn("Net User : " & CountAgt(Universe.Internet.user))
		PrintLn("Net Follower : " & CountAgt(Universe.Internet.follower))
		PrintLn("Consumer : " & CountAgt(Universe.Social.consumer))
		PrintLn("") // 改行
	End if
}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.INTERNET.USER
// ネットユーザーはネットフォロワーに情報を伝達する
// 宣伝や口コミで既に映画の情報を持っているフォロワーに情報を伝達する
Agt_Init{

}

Agt_Step{
	Dim movies As Agtset
	Dim movie As Agt
	Dim date As Integer
	
	// 鑑賞情報の更新
	date = GetCountStep()
	MakeAgtSet(movies, Universe.movie)
	For Each movie in movies
		If date == movie.startDate Then // ネットユーザーは映画を鑑賞済みである設定
			If My.viewStep(0, movie.IDNo) == 0 Then
				My.viewStep(0, movie.IDNo) = 1
			End if
		End if
	Next movie
	
	//// ランダムに移動
	//ForwardDirectionCell(Int(Rnd()*8), 1)
}
#end_rule UNIVERSE.INTERNET.USER




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.INTERNET.FOLLOWER
// ネットフォロワーは一般消費者とネットフォロワーに情報を伝達する
Agt_Init{

}

Agt_Step{
	Dim movies As Agtset, followers As Agtset, consumers As Agtset, users As Agtset
	Dim info As Double, rand As Double
	Dim date As Integer
	
	MakeAgtSet(movies, Universe.movie)
	SortAgtSet(movies, "IDNo", True)
	MakeOneAgtSetAroundOwnCell(users, Universe.Internet.user.transmission_range, Universe.Internet.user, False)
	MakeOneAgtSetAroundOwnCell(followers, My.transmission_range, Universe.Internet.follower, False)
	MakeOneAgtSetAroundPositionCell(consumers, Universe.Social, My.X, My.Y, 0, My.transmission_range, Universe.Social.consumer)
	date = GetCountStep()
	
	@functionAgtStep(My, movies, users, followers, date, True)
}
#end_rule UNIVERSE.INTERNET.FOLLOWER




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.SOCIAL.CONSUMER
// 一般消費者は一般消費者に情報を伝達する
Agt_Init{

}

Agt_Step{
	Dim movies As Agtset, followers As Agtset, consumers As Agtset
	Dim info As Double, rand As Double
	Dim date As Integer
	
	MakeAgtSet(movies, Universe.movie)
	SortAgtSet(movies, "IDNo", True)
	MakeOneAgtSetAroundOwnCell(consumers, My.transmission_range, Universe.Social.consumer, False)
	MakeOneAgtSetAroundPositionCell(followers, Universe.Internet, My.X, My.Y, 0, My.transmission_range, Universe.Internet.follower)
	date = GetCountStep()
	
	@functionAgtStep(My, movies, consumers, followers, date, False)
}
#end_rule UNIVERSE.SOCIAL.CONSUMER




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.MOVIE
Agt_Init{

}

Agt_Step{
// 宣伝受信量を更新する(n_PP=2)
My.promotion = ( My.alpha * Ad_rate(GetCountStep()-My.startDate) ) ^ 2
}

Function Ad_rate(date As Integer) As Double{
// 宣伝量 Q(a) を返す

// 公開の30日前から宣伝を開始する
If date < -30 Then
	return 0
elseIf date < -7 Then // 公開の1週間前まではピーク時の7割
	// n_q1 = 0.7
	return 0.7
elseif date < 0 Then // 公開の1週間前から宣伝はピークとなる
	// n_q2 = 1.0
	return 1.0
elseif date < 90 Then // 公開後は徐々に宣伝の効果が減衰する
	return 0.977^date
else
	return 0
End if
}
#end_rule UNIVERSE.MOVIE




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 0;
    Exec_Wait_Max = 1000;
    Random_Generator = Java_Standard;
    Exec_Order = Component;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// Executing Order By Agent Component Definition Division
//-------------------------------------------------------
Executing_Order_Component {
    Component_Priority = "Universe.movie", 1;
    Component_Priority = "Universe.Internet.user", 2;
    Component_Priority = "Universe.Internet.follower", 3;
    Component_Priority = "Universe.Social.consumer", 4;
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Internet";
    Map_Name = "Internet";
    Title = "Internet";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 0;
    Position_y = 0;
    Size_x = 720;
    Size_y = 275;
    Map_Cell_Size = 5;
    Remarks = Yes;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 40, 40;
    Ruled_Line = Yes;
    Text_Display = No;
    Text_Display_Variable_Name = "Universe.dir";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "user";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Internet.user";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 255,0,0;
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Internet.user.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Internet.user.ID";
        Font_Name = "Dialog";
        Font_Char_Set = 0;
        Font_Size = 12.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
    }
    Output {
        Map_Element_Name = "follower";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Internet.follower";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 0,0,255;
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Internet.follower.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Internet.follower.ID";
        Font_Name = "Dialog";
        Font_Char_Set = 0;
        Font_Size = 12.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Social";
    Map_Name = "Social";
    Title = "Social";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 0;
    Position_y = 275;
    Size_x = 720;
    Size_y = 275;
    Map_Cell_Size = 5;
    Remarks = Yes;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = Yes;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 40, 40;
    Ruled_Line = Yes;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "consumer";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Social.consumer";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 0,255,102;
        Marker_Id = 2;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Social.consumer.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Social.consumer.ID";
        Font_Name = "Dialog";
        Font_Char_Set = 0;
        Font_Size = 12.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
    }
}


//-------------------------------------------------------
// Time Graph Output Definition Division
//-------------------------------------------------------
Time_Graph {
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Graph_Name = "NumberOfAudience";
    Title = "NumberOfAudience";
    Disable = No;
    Background_Color = 255, 255, 255;
    Remarks = Yes;
    Legend_Pos = Top;
    FastDraw = Yes;
    Position_x = 0;
    Position_y = 550;
    Size_x = 720;
    Size_y = 275;
    Map_Cell_Size = -1;
    Axis_Label = "step", "number";
    Draw_By_JFree_Chart = Yes;
    Scale = 0, 0.0, 1000, 100.0, 100, 10.0;
    ScaleAuto = Yes, Yes;
    Output_Group_Name = "";
    Output {
        Graph_Element_Name = "test0";
        Line_Color = 128, 128, 128;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(0)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 0);
    }
    Output {
        Graph_Element_Name = "test1";
        Line_Color = 255, 0, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(1)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 255);
    }
    Output {
        Graph_Element_Name = "test2";
        Line_Color = 0, 255, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(2)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 0, 0);
    }
    Output {
        Graph_Element_Name = "test3";
        Line_Color = 255, 255, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(3)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 0, 0);
    }
    Output {
        Graph_Element_Name = "test4";
        Line_Color = 128, 128, 128;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(4)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 0, 255);
    }
    Output {
        Graph_Element_Name = "test5";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(5)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 0, 255);
    }
    Output {
        Graph_Element_Name = "test6";
        Line_Color = 0, 0, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(6)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 255, 0);
    }
    Output {
        Graph_Element_Name = "test7";
        Line_Color = 0, 255, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(7)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 0, 255);
    }
    Output {
        Graph_Element_Name = "test8";
        Line_Color = 255, 0, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(8)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (102, 102, 102);
    }
    Output {
        Graph_Element_Name = "test9";
        Line_Color = 0, 255, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(9)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 153, 0);
    }
    Output {
        Graph_Element_Name = "test10";
        Line_Color = 255, 255, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(10)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 255, 204);
    }
    Output {
        Graph_Element_Name = "test11";
        Line_Color = 128, 128, 128;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(11)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 153, 255);
    }
    Output {
        Graph_Element_Name = "test12";
        Line_Color = 255, 0, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(12)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 153, 0);
    }
    Output {
        Graph_Element_Name = "test13";
        Line_Color = 0, 0, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(13)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (255, 153, 153);
    }
    Output {
        Graph_Element_Name = "test14";
        Line_Color = 0, 255, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(14)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (51, 153, 255);
    }
    Output {
        Graph_Element_Name = "test15";
        Line_Color = 255, 0, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(15)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (153, 0, 102);
    }
    Output {
        Graph_Element_Name = "test16";
        Line_Color = 0, 255, 255;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(16)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (204, 153, 255);
    }
    Output {
        Graph_Element_Name = "test17";
        Line_Color = 255, 255, 0;
        Line_Width = 2;
        Marker_Id = 0;
        Output_Expression = "universe.test(17)";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
        Graph_Element_Color = (0, 102, 102);
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 13, 329, 160, 473;
    Display_Type = 0;
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "user_ratio";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.user_ratio";
        Text_Data = "0.16";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "follower_ratio";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.follower_ratio";
        Text_Data = "0.24";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "consumer_ratio";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.consumer_ratio";
        Text_Data = "0.6";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "num_agent";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.num_agent";
        Text_Data = "100";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "series";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.series";
        Text_Data = "1";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "period";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.period";
        Text_Data = "400";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "num_new_in_edges";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.num_new_in_edges";
        Text_Data = "3";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "num_new_out_edges";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.num_new_out_edges";
        Text_Data = "3";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Rule_LineNo = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 75;
    Debug_Position_y = 75;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 720;
    Console_Position_y = 0;
    Console_Size_x = 720;
    Console_Size_y = 275;
    Componen_Tree_Position_x = 720;
    Componen_Tree_Position_y = 550;
    Componen_Tree_Size_x = 720;
    Componen_Tree_Size_y = 275;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    plug_in_module_name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 14.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
    Window_Font_Name = "Dialog";
    Window_Font_Char_Set = 0;
    Window_Font_Size = 14.0;
    Window_Font_Style = 0;
    Window_Font_Color = 0, 0, 0;
    Window_Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, 0, 0, 1440, 900;
    Window_Name = Output_Setting_Window, 495, 275, 480, 350;
    Window_Name = Artisoc_Help_Window, 10, 10, 400, 300;
    Window_Name = Output_Group_Setting_Window, 405, 275, 630, 350;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}


//-------------------------------------------------------
// Model Description Division
//-------------------------------------------------------
Model_Description {
    Universe {
        Variable series = "実行回数";
        Function writeEnvInfo {
        }
        Function getCategoryThreshold {
        }
        Function getParams {
        }
        Function getGenreWeight {
        }
        Function getInformationFromVirtual {
        }
        Function getInformationFromReal {
        }
        Function functionAgtStep {
        }
        Function initializeNetwork {
        }
        Function Univ_Init {
        }
        Function Univ_Step_Begin {
        }
        Function Univ_Step_End {
        }
        Function Univ_Finish {
        }
    }
    Space Universe.Internet {
    }
    Agent Universe.Internet.user {
        Function Agt_Init {
        }
        Function Agt_Step {
        }
    }
    Agent Universe.Internet.follower {
        Variable W_g = "weight of if an agent like the genre ";
        Variable wGreed = "満足度入手回数に応じた重み\nm2";
        Variable wCriticism = "批評値取得回数に応じた重み\nm3";
        Variable viewStep = "viewStep(a, 0)鑑賞回数\nviewStep(a, 1)観賞後の経過時間";
        Variable infoThreshold = "情報量の鑑賞閾値";
        Variable viewNum = "映画の鑑賞回数";
        Variable Utility = "鑑賞効用値";
        Function Agt_Init {
        }
        Function Agt_Step {
        }
    }
    Space Universe.Social {
    }
    Agent Universe.Social.consumer {
        Variable W_g = "weight of if an agent like the genre ";
        Variable wGreed = "満足度入手回数に応じた重み\nm2";
        Variable wCriticism = "批評値取得回数に応じた重みm3";
        Variable viewStep = "viewStep(0, a)鑑賞回数(フラグ)\nviewStep(1, a)観賞後の経過時間";
        Variable infoThreshold = "情報量の鑑賞閾値";
        Variable viewNum = "映画の鑑賞回数";
        Variable Utility = "鑑賞効用値";
        Function Agt_Init {
        }
        Function Agt_Step {
        }
    }
    Agent Universe.movie {
        Function Agt_Init {
        }
        Function Agt_Step {
        }
        Function Ad_rate {
        }
    }
}
